version: 2

# Sample hal9000.yml - This is required to fetch your Circle CI builds from within Hal
# - Note: you must set "CIRCLECI_TOKEN" to Hal encrypted configuration using a project token created within Circle CI.
#
# > platform: 'linux'
# > image: 'circleci'
# >
# > dist: '.artifact'
# > build:
# >   - 'unpack-build-from-circleci ".artifact"'

############################################################
# Shared jobs and configuration
############################################################
global-environment-vars: &global-env-vars
  CORE_ID: '207965'
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  NAME: 'Aether'
  SONAR_URL: 'https://sonarqube.rockfin.com'

global_environment: &global_environment
  working_directory: '~/project'
  environment:
    <<: *global-env-vars

enterprise_setup_step: &enterprise_setup_step
  run:
    name: 'Prepare Enterprise Setup'
    command: 'curl -sL https://tools.circleci.foc.zone/install-certs | bash -'

attach_workspace_step: &attach_workspace_step
  attach_workspace:
    at: '.'

persist_workspace_step: &persist_workspace_step
  persist_to_workspace:
    root: '.'
    paths: 
      - ./*


#############################################################
# Define your jobs
#############################################################

jobs:
  sonar-scanner-and-unit-tests:
    <<: *global_environment  
    docker: [{image: 'qldockerdtr.rockfin.com/jcherry/dotnet:3.1-sonarqube'}]
    steps:
      - checkout
      - run:
          name: Run Sonar Scanner
          command: |
              run-sonar begin
              dotnet test ./Aether.Tests/Aether.Tests.csproj \
                --logger "trx" \
                /p:CollectCoverage=true \
                /p:CoverletOutputFormat=opencover
              run-sonar end
      - *persist_workspace_step

  build-nuget-package:
#    <<: *global_environment
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:3.1
    steps:
#      - *attach_workspace_step
#      - *enterprise_setup_step
      - checkout
      - run:
          name: Install SSL certs
          command: |
            curl -sL https://tools.circleci.foc.zone/install-certs | bash -
      - restore_cache:
          key: nuget-packages
      - run:
          name: Restore packages
          command: |
            cd Aether 
            dotnet restore
      - save_cache:
          paths:
              - ~/.nuget/packages
          key: nuget-packages-{{ epoch }}
      - run:
          name: 'Build Nuget Package'
          command: |
            cd Aether
            versionNum="${CIRCLE_TAG:1}"
            echo $versionNum
            dotnet build -c Release -p:Version=$versionNum
      - *persist_workspace_step

#  publish_build_to_quget_gallery:
#    <<: *global_environment
#    docker: [{image: 'qldockerdtr.rockfin.com/jcherry/dotnet:3.1-sdk-openjdk'}]
#    steps:
#      - *attach_workspace_step
#      - run: 
#          name: 'Updating Quget Gallery'
#          command: |
#            cd Aether/bin/Release
#            versionNum="${CIRCLE_TAG:1}"
#            dotnet nuget push ./DataServices.Aether.$versionNum.nupkg -s https://qugetgal.rockfin.com -k $AETHER_QUGET_KEY


#############################################################
# Define your workflow
#############################################################

workflows:
  version: 2

  pipeline:
    jobs:
      - sonar-scanner-and-unit-tests

      - build-nuget-package
#          requires: [ sonar-scanner-and-unit-tests ]

#      - publish_build_to_quget_gallery:
#         requires: [ build-nuget-package ]
